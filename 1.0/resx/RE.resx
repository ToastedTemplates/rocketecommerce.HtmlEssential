<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="accountname.Text" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="accountnumber.Text" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="activeadminmenu.Help" xml:space="preserve">
    <value>Different configurations or options will make some menu options obsolete.  This allow you to select which options should appear on the clients admin menu.</value>
  </data>
  <data name="activeadminmenu.Text" xml:space="preserve">
    <value>Active Admin Menu</value>
  </data>
  <data name="activeportal.Text" xml:space="preserve">
    <value>Active Shop</value>
  </data>
  <data name="address.Text" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="address1.Text" xml:space="preserve">
    <value>Address line 1</value>
  </data>
  <data name="address2.Text" xml:space="preserve">
    <value>Address line 2</value>
  </data>
  <data name="addtobasket.Text" xml:space="preserve">
    <value>Add to Basket</value>
  </data>
  <data name="administrator.Text" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="amount.Text" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="amountdue.Text" xml:space="preserve">
    <value>Amount Due</value>
  </data>
  <data name="amountpaid.Text" xml:space="preserve">
    <value>Amount Paid</value>
  </data>
  <data name="attention.Text" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="bankdetails.Text" xml:space="preserve">
    <value>Bank Details</value>
  </data>
  <data name="bankname.Text" xml:space="preserve">
    <value>Bank Name</value>
  </data>
  <data name="billingaddress.Text" xml:space="preserve">
    <value>Billing Address</value>
  </data>
  <data name="buy.Text" xml:space="preserve">
    <value>Buy</value>
  </data>
  <data name="cart.Text" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="cartadmin.Text" xml:space="preserve">
    <value>Cart Admin</value>
  </data>
  <data name="cartdays.Help" xml:space="preserve">
    <value>The number of days to retain carts in the Database.  After the number of days has elapsed, the cart will be removed from the database.</value>
  </data>
  <data name="cartdays.Text" xml:space="preserve">
    <value>Retain Cart (Days)</value>
  </data>
  <data name="cartlimit.Help" xml:space="preserve">
    <value>The number of carts that can be kepted in the database. Once the portal carts have passed this number in the database the system will automatically removed the extra carts after 24 hours, regardless of the &amp;quot;Reatain Cart&amp;quot; setting.</value>
  </data>
  <data name="cartlimit.Text" xml:space="preserve">
    <value>Cart Record Limit</value>
  </data>
  <data name="catalog.Text" xml:space="preserve">
    <value>Catalog</value>
  </data>
  <data name="categories.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="categoriesadmin.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="city.Text" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="company.Text" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="companyname.Text" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="contactdetails.Text" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="contactemail.Text" xml:space="preserve">
    <value>Contact Email</value>
  </data>
  <data name="contacts.Text" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="continueshopping.Text" xml:space="preserve">
    <value>Continue Shopping</value>
  </data>
  <data name="controltype.Text" xml:space="preserve">
    <value>Control Type</value>
  </data>
  <data name="country.Text" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="currencycode.Text" xml:space="preserve">
    <value>Currency Code</value>
  </data>
  <data name="currencyculturecode.Text" xml:space="preserve">
    <value>Currency Culture Code</value>
  </data>
  <data name="dashboard.Text" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="database.Text" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="date.Text" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="details.Text" xml:space="preserve">
    <value>    Details</value>
  </data>
  <data name="discount.Text" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="discountmethods.Text" xml:space="preserve">
    <value>Discount Methods</value>
  </data>
  <data name="discountprice.Text" xml:space="preserve">
    <value>Discount Price</value>
  </data>
  <data name="displayaddress.Text" xml:space="preserve">
    <value>Display Address</value>
  </data>
  <data name="document.Text" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="due.Text" xml:space="preserve">
    <value>Due</value>
  </data>
  <data name="email.Text" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="emailfail.Text" xml:space="preserve">
    <value>Email NOT sent</value>
  </data>
  <data name="emailmessage.Text" xml:space="preserve">
    <value>Email Message</value>
  </data>
  <data name="emailon.Text" xml:space="preserve">
    <value>Activate Shop Emails</value>
  </data>
  <data name="emailsent.Text" xml:space="preserve">
    <value>Email sent.</value>
  </data>
  <data name="employees.Text" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="emptybasket.Text" xml:space="preserve">
    <value>Your Basket is Empty</value>
  </data>
  <data name="enginedomain.Text" xml:space="preserve">
    <value>Engine Domain URL</value>
  </data>
  <data name="engineurl.Help" xml:space="preserve">
    <value>The Engine URL is the portal url that is used as the e-commerce engine and has the user authentication linked to it.  It is autogenerated using a GUID key (as the sub-domain) and a root domain.  Usually the root domain will be the default site, but it can be altered to use another url.  The EngineUrl DNS will need to be pointing at the server and attached to the website binding.  It is automatically created as a portal alias.&amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;b&amp;gt;  WARNING: Incorrectly altering this URL can stop the e-commerce engine from working.&amp;lt;/b&amp;gt;</value>
  </data>
  <data name="engineurl.Text" xml:space="preserve">
    <value>Engine URL</value>
  </data>
  <data name="fail.Text" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="firstname.Text" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="from.Text" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="fromemail.Text" xml:space="preserve">
    <value>From Email</value>
  </data>
  <data name="general.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="generalsettings.Text" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="history.Text" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="imageupload.Msg" xml:space="preserve">
    <value>Upload your images here, by dragging and dropping on the area below.  Or by using the upload button to select images from your file system.</value>
  </data>
  <data name="imageupload.Text" xml:space="preserve">
    <value>Image Upload</value>
  </data>
  <data name="internalnotes.Text" xml:space="preserve">
    <value>Internal Notes</value>
  </data>
  <data name="invoiceref.Text" xml:space="preserve">
    <value>Invoice Ref</value>
  </data>
  <data name="items.Text" xml:space="preserve">
    <value>article(s)</value>
  </data>
  <data name="justify.Text" xml:space="preserve">
    <value>Justify</value>
  </data>
  <data name="keywords.Text" xml:space="preserve">
    <value>Keywords</value>
  </data>
  <data name="lastname.Text" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="makeactive.Text" xml:space="preserve">
    <value>Make Active</value>
  </data>
  <data name="manager.Text" xml:space="preserve">
    <value>Manager</value>
  </data>
  <data name="manageremail.Text" xml:space="preserve">
    <value>Manager Email</value>
  </data>
  <data name="managerpassword.Text" xml:space="preserve">
    <value>Manage Password</value>
  </data>
  <data name="memebers.Text" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="merchantcontacts.Text" xml:space="preserve">
    <value>Merchant Contacts</value>
  </data>
  <data name="message_bankinstructions.Default" xml:space="preserve">
    <value>You have opted to NOT pay online.  Please make your bank payment as soon as possible to the account below. Insert the order number in the reference field and include your name as well if it is different from the acccount name.</value>
  </data>
  <data name="message_bankinstructions.Help" xml:space="preserve">
    <value>Message displayed on the order email, when the order has not been paid via the on-line interface.</value>
  </data>
  <data name="message_bankinstructions.Text" xml:space="preserve">
    <value>Banking Instructions</value>
  </data>
  <data name="message_checkoutfail.Default" xml:space="preserve">
    <value>The order was cancelled or the payment failed. Contact your bank if you need assistance with your credit card, or contact us if you believe there is a problem with the checkout.</value>
  </data>
  <data name="message_checkoutfail.Help" xml:space="preserve">
    <value>This text is displayed on the website, to the client, after a failed order.</value>
  </data>
  <data name="message_checkoutfail.Text" xml:space="preserve">
    <value>Checkout Fail message</value>
  </data>
  <data name="message_checkoutok.Default" xml:space="preserve">
    <value>Thank you for your order. You will receive an emailed confirmation containing all order details. Please check your junk email folders if you don&amp;#39;t receive it within 30 minutes. Take note of the number below if you wish to contact us about this order.</value>
  </data>
  <data name="message_checkoutok.Help" xml:space="preserve">
    <value>This text is displayed on the website, to the client, after a successful order.</value>
  </data>
  <data name="message_checkoutok.Text" xml:space="preserve">
    <value>Checkout OK message</value>
  </data>
  <data name="message_emailorder.Default" xml:space="preserve">
    <value>Thank you for your order. We&amp;#39;re here to help! Call us during office hours Monday to Friday, or visit us in-store if you have any questions about your order.</value>
  </data>
  <data name="message_emailorder.Help" xml:space="preserve">
    <value>Text that is displayed on the successful order email, which is sent to the client.</value>
  </data>
  <data name="message_emailorder.Text" xml:space="preserve">
    <value>Email Order Message</value>
  </data>
  <data name="message_paymentform.Default" xml:space="preserve">
    <value>This form allows you to pay us.  Please enter your details and click &amp;quot;Pay&amp;quot;.  You will be redirected to the bank for secure payment.</value>
  </data>
  <data name="message_paymentform.Help" xml:space="preserve">
    <value>This message is displayed on the single payment form.</value>
  </data>
  <data name="message_paymentform.Text" xml:space="preserve">
    <value>Payment Form Message</value>
  </data>
  <data name="message_paymentformemail.Default" xml:space="preserve">
    <value>Easy payment can be made on our secure payment website.  Click the &amp;quot;Pay&amp;quot; button below to open our payment form.</value>
  </data>
  <data name="message_paymentformemail.Help" xml:space="preserve">
    <value>When an email is sent for a payment, the email will contain this message. </value>
  </data>
  <data name="message_paymentformemail.Text" xml:space="preserve">
    <value>Payment Form Email Message</value>
  </data>
  <data name="message_paymentformfail.Default" xml:space="preserve">
    <value>Your payment has been refused or cancelled, please try again.</value>
  </data>
  <data name="message_paymentformfail.Help" xml:space="preserve">
    <value>Message that is displayed to the client when they return from the bank with a FAILED payment status.</value>
  </data>
  <data name="message_paymentformfail.Text" xml:space="preserve">
    <value>Payment Form Fail Message</value>
  </data>
  <data name="message_paymentformok.Default" xml:space="preserve">
    <value>Your Payment has been successfully completed.</value>
  </data>
  <data name="message_paymentformok.Help" xml:space="preserve">
    <value>Message that is displayed to the client when they return from the bank with a SUCCESSFUL payment status.</value>
  </data>
  <data name="message_paymentformok.Text" xml:space="preserve">
    <value>Payment Form OK message</value>
  </data>
  <data name="message_paymentreceived.Default" xml:space="preserve">
    <value>Thank you for your payment.</value>
  </data>
  <data name="message_paymentreceived.Help" xml:space="preserve">
    <value>The text that will displayed on the &amp;quot;Payment OK&amp;quot; email sent to the client</value>
  </data>
  <data name="message_paymentreceived.Text" xml:space="preserve">
    <value>Payment Received</value>
  </data>
  <data name="message_storepickup.Default" xml:space="preserve">
    <value>You are welcome to pick your order up from us in store during opening hours. Please ring us if you want to ensure it is ready for pickup.</value>
  </data>
  <data name="message_storepickup.Help" xml:space="preserve">
    <value>If you have a pickup option for shipping, this message is displayed on the website during shipping selection.</value>
  </data>
  <data name="message_storepickup.Text" xml:space="preserve">
    <value>Store Pickup</value>
  </data>
  <data name="message_waitingforpayment.Default" xml:space="preserve">
    <value>You have opted to NOT pay online.  An email with instructions has been send to your email address.</value>
  </data>
  <data name="message_waitingforpayment.Help" xml:space="preserve">
    <value>When &amp;quot;manual payment&amp;quot; is used, the payment is NOT paid online and must be sent to the merchant via other methods (cheque, money, transfer, etc.).  This message is displayed on the bank return after clicking pay on the &amp;quot;manual payment&amp;quot; option.</value>
  </data>
  <data name="message_waitingforpayment.Text" xml:space="preserve">
    <value>Waiting For Payment</value>
  </data>
  <data name="models.Text" xml:space="preserve">
    <value>Models</value>
  </data>
  <data name="modify.Text" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="name.Text" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="newportal.Text" xml:space="preserve">
    <value>New Portal</value>
  </data>
  <data name="notes.Text" xml:space="preserve">
    <value>Notes</value>
  </data>
  <data name="notification.Text" xml:space="preserve">
    <value>Notification</value>
  </data>
  <data name="notifications.Text" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="number.Text" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="ok.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="options.Text" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="order.Text" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="orderadmin.Text" xml:space="preserve">
    <value>Order Admin</value>
  </data>
  <data name="orderdate.Text" xml:space="preserve">
    <value>Order Date</value>
  </data>
  <data name="ordernumber.Text" xml:space="preserve">
    <value>Order Number</value>
  </data>
  <data name="orders.Text" xml:space="preserve">
    <value>Orders</value>
  </data>
  <data name="orderstatus.Text" xml:space="preserve">
    <value>Order Status</value>
  </data>
  <data name="orderstatus0.Text" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="orderstatus10.Text" xml:space="preserve">
    <value>Cart</value>
  </data>
  <data name="orderstatus100.Text" xml:space="preserve">
    <value>Shipped</value>
  </data>
  <data name="orderstatus110.Text" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="orderstatus120.Text" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="orderstatus130.Text" xml:space="preserve">
    <value>Waiting</value>
  </data>
  <data name="orderstatus140.Text" xml:space="preserve">
    <value>Special</value>
  </data>
  <data name="orderstatus150.Text" xml:space="preserve">
    <value>Payment Failed</value>
  </data>
  <data name="orderstatus160.Text" xml:space="preserve">
    <value>Partial Payment</value>
  </data>
  <data name="orderstatus170.Text" xml:space="preserve">
    <value>Partial Not Verified</value>
  </data>
  <data name="orderstatus180.Text" xml:space="preserve">
    <value>Overpaid</value>
  </data>
  <data name="orderstatus190.Text" xml:space="preserve">
    <value>Overpaid Not Verified</value>
  </data>
  <data name="orderstatus20.Text" xml:space="preserve">
    <value>Incomplete</value>
  </data>
  <data name="orderstatus200.Text" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="orderstatus210.Text" xml:space="preserve">
    <value>Payment Not Verified</value>
  </data>
  <data name="orderstatus220.Text" xml:space="preserve">
    <value>Waiting for Payment</value>
  </data>
  <data name="orderstatus30.Text" xml:space="preserve">
    <value>Waiting for Bank</value>
  </data>
  <data name="orderstatus40.Text" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="orderstatus50.Text" xml:space="preserve">
    <value>Payment Accepted</value>
  </data>
  <data name="orderstatus60.Text" xml:space="preserve">
    <value>Payment Not Verified</value>
  </data>
  <data name="orderstatus70.Text" xml:space="preserve">
    <value>Waiting for Payment</value>
  </data>
  <data name="orderstatus80.Text" xml:space="preserve">
    <value>Waiting for Stock</value>
  </data>
  <data name="orderstatus90.Text" xml:space="preserve">
    <value>Being Manufactured</value>
  </data>
  <data name="orderstatusall.Text" xml:space="preserve">
    <value>All Status</value>
  </data>
  <data name="pageandlinks.Text" xml:space="preserve">
    <value>Pages and Links</value>
  </data>
  <data name="pageslinks_checkout.Help" xml:space="preserve">
    <value>Checkout page URL, on the display website</value>
  </data>
  <data name="pageslinks_paymentpage.Help" xml:space="preserve">
    <value>Payment page URL, on the display website</value>
  </data>
  <data name="pageslinks_productdetail.Help" xml:space="preserve">
    <value>Product detail URL, on the display website</value>
  </data>
  <data name="pageslinks_productlist.Help" xml:space="preserve">
    <value>Product list URL, on the display website</value>
  </data>
  <data name="paid.Text" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="pay.Text" xml:space="preserve">
    <value>Pay</value>
  </data>
  <data name="payment.Text" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="paymentadmin.Text" xml:space="preserve">
    <value>Payments</value>
  </data>
  <data name="paymentmethods.Text" xml:space="preserve">
    <value>Payment Methods</value>
  </data>
  <data name="paymentprovider.Text" xml:space="preserve">
    <value>Payment Provider</value>
  </data>
  <data name="paymentproviders.Text" xml:space="preserve">
    <value>Payment Providers</value>
  </data>
  <data name="paymentrequest.Text" xml:space="preserve">
    <value>A Payment has been requested</value>
  </data>
  <data name="payments.Text" xml:space="preserve">
    <value>Payments</value>
  </data>
  <data name="phone.Text" xml:space="preserve">
    <value>phone</value>
  </data>
  <data name="portalsettings.Text" xml:space="preserve">
    <value>Portal Settings</value>
  </data>
  <data name="portalshops.Text" xml:space="preserve">
    <value>Shops</value>
  </data>
  <data name="postbox.Text" xml:space="preserve">
    <value>Post box</value>
  </data>
  <data name="postcode.Text" xml:space="preserve">
    <value>Post Code</value>
  </data>
  <data name="preferedculturecode.Text" xml:space="preserve">
    <value>Prefered Culture</value>
  </data>
  <data name="price.Text" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="printlabel.Text" xml:space="preserve">
    <value>Print Label</value>
  </data>
  <data name="productadmin.Text" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="productdata.Help" xml:space="preserve">
    <value>Unchecking the data section will make the product data section hidden in the product admin.</value>
  </data>
  <data name="productdata.Text" xml:space="preserve">
    <value>Product Data Sections</value>
  </data>
  <data name="productdatasection.Text" xml:space="preserve">
    <value>Models,Images,Options,Categories,Properties,Docs,Links,Html,SEO,Extra</value>
  </data>
  <data name="productdocumentlimit.Msg" xml:space="preserve">
    <value>Your Product Document Limit will not allow additional documents to be added.  Contact your webmaster to increase your document limit.</value>
  </data>
  <data name="productdocumentlimit.Text" xml:space="preserve">
    <value>Product Document Limit</value>
  </data>
  <data name="productimagelimit.Msg" xml:space="preserve">
    <value>Your Product Image Limit will not allow additional images to be added.  Contact your webmaster to increase your image limit.</value>
  </data>
  <data name="productimagelimit.Text" xml:space="preserve">
    <value>Product Image Limit</value>
  </data>
  <data name="productmodellimit.Msg" xml:space="preserve">
    <value>Your Product Model Limit will not allow additional models to be added.  Contact your webmaster to increase your model limit.</value>
  </data>
  <data name="productmodellimit.Text" xml:space="preserve">
    <value>Product Model Limit</value>
  </data>
  <data name="productname.Text" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="productoptionlimit.Msg" xml:space="preserve">
    <value>Your Product Option Limit will not allow additional options to be added.  Contact your webmaster to increase your option limit.</value>
  </data>
  <data name="productoptionlimit.Text" xml:space="preserve">
    <value>Product Option Limit</value>
  </data>
  <data name="productorderby.Text" xml:space="preserve">
    <value>Product &amp;quot;Order By&amp;quot; dropdown</value>
  </data>
  <data name="products.Text" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="properties.Text" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="propertiesadmin.Text" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="protocol.Text" xml:space="preserve">
    <value>Protocol</value>
  </data>
  <data name="providers.Text" xml:space="preserve">
    <value>Providers</value>
  </data>
  <data name="qty.Text" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="ref.Text" xml:space="preserve">
    <value>Ref.</value>
  </data>
  <data name="region.Text" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="removearticle.confirm" xml:space="preserve">
    <value>Remove Article</value>
  </data>
  <data name="removehistory.Text" xml:space="preserve">
    <value>Remove History</value>
  </data>
  <data name="resetportalshop.Help" xml:space="preserve">
    <value>Reseting the shop will restore all shop settings back to the default for the system.  (Usually created by the Export PortalShop)</value>
  </data>
  <data name="resetportalshop.Text" xml:space="preserve">
    <value>Reset Shop</value>
  </data>
  <data name="retrypayment.Text" xml:space="preserve">
    <value>Retry Payment</value>
  </data>
  <data name="rocketecommerce.Text" xml:space="preserve">
    <value>Rocket E-commerce</value>
  </data>
  <data name="rootdomain.Text" xml:space="preserve">
    <value>Root Domain</value>
  </data>
  <data name="sales.Text" xml:space="preserve">
    <value>Sales</value>
  </data>
  <data name="saveandsend.Text" xml:space="preserve">
    <value>Save and Send Email</value>
  </data>
  <data name="securitykey.Help" xml:space="preserve">
    <value>Security Key is used to identify a remote website that calls the API.  The remote module must pass a security key.</value>
  </data>
  <data name="securitykey.Text" xml:space="preserve">
    <value>Security Key</value>
  </data>
  <data name="sendemail.Text" xml:space="preserve">
    <value>Send Email</value>
  </data>
  <data name="sendreceivedemail.Text" xml:space="preserve">
    <value>Received Email</value>
  </data>
  <data name="seo.Text" xml:space="preserve">
    <value>SEO</value>
  </data>
  <data name="setdefault.Help" xml:space="preserve">
    <value>Exporting this shop will set it as the default for all new portal shops created on this install.  A &amp;quot;default_portalshop.xml&amp;quot; file is created in the RocketEcommerce folder.  When a new portal shop is created this xml data will be used to create the new portal.</value>
  </data>
  <data name="setdefault.Text" xml:space="preserve">
    <value>Set as Default</value>
  </data>
  <data name="settingcountry.Text" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="settings.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="setup.Text" xml:space="preserve">
    <value>SetUp</value>
  </data>
  <data name="shipping.Text" xml:space="preserve">
    <value>Shipping</value>
  </data>
  <data name="shippingaddress.Text" xml:space="preserve">
    <value>Shipping Address</value>
  </data>
  <data name="shippingmethods.Text" xml:space="preserve">
    <value>Shipping Methods</value>
  </data>
  <data name="shippingproviders.Text" xml:space="preserve">
    <value>Shipping Providers</value>
  </data>
  <data name="sqlfilter.Help" xml:space="preserve">
    <value>The SQL filter is a section of SQL that interacts with the database SPROC to do a selection.  This is nearly always a text search, but it can be defined to whatever you wish.  The basic idea is to get the search text from the users then do a SPROC call with this filter.  The tokens in &amp;quot;{&amp;quot; &amp;quot;}&amp;quot; will be replaced with the SessionParam field name.</value>
  </data>
  <data name="sqlfilter.Text" xml:space="preserve">
    <value>SQL Filter</value>
  </data>
  <data name="sqlfilterorder.Text" xml:space="preserve">
    <value>Order SQL Filter </value>
  </data>
  <data name="sqlfilterpayment.Text" xml:space="preserve">
    <value>Payment SQL Filter</value>
  </data>
  <data name="sqlfilterproduct.Text" xml:space="preserve">
    <value>Product SQL Filter </value>
  </data>
  <data name="sqlorderby.Help" xml:space="preserve">
    <value>A list of SQL order by clauses, this will be used in the &amp;quot;order by&amp;quot; dropdownlist to give different sort order to the product list. &amp;lt;i&amp;gt;  On large databases a index may be required on the table to ensure performace&amp;lt;/i&amp;gt;</value>
  </data>
  <data name="sqlorderby.Text" xml:space="preserve">
    <value>SQL Order By</value>
  </data>
  <data name="sqlorderbyorder.Text" xml:space="preserve">
    <value>SQL OrderBy Order</value>
  </data>
  <data name="sqlorderbyproduct.Text" xml:space="preserve">
    <value>SQL OrderBy Article</value>
  </data>
  <data name="sqlorderby-product-name.Text" xml:space="preserve">
    <value>Name ↓</value>
  </data>
  <data name="sqlorderby-product-name-desc.Text" xml:space="preserve">
    <value>Name ↑</value>
  </data>
  <data name="sqlorderby-product-price.Text" xml:space="preserve">
    <value>Price ↓</value>
  </data>
  <data name="sqlorderby-product-price-desc.Text" xml:space="preserve">
    <value>Price ↑</value>
  </data>
  <data name="sqlorderby-product-ref.Text" xml:space="preserve">
    <value>Ref. ↓</value>
  </data>
  <data name="sqlorderby-product-ref-desc.Text" xml:space="preserve">
    <value>Ref. ↑</value>
  </data>
  <data name="status.Text" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="storename.Text" xml:space="preserve">
    <value>Store Name</value>
  </data>
  <data name="street.Text" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="subtotal.Text" xml:space="preserve">
    <value>SubTotal</value>
  </data>
  <data name="summary.Text" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="support.Text" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="tax.Text" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="taxmethods.Text" xml:space="preserve">
    <value>Tax Methods</value>
  </data>
  <data name="taxnumber.Text" xml:space="preserve">
    <value>Tax Number</value>
  </data>
  <data name="taxproviders.Text" xml:space="preserve">
    <value>Tax Providers</value>
  </data>
  <data name="tel.Text" xml:space="preserve">
    <value>Tel.</value>
  </data>
  <data name="total.Text" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="unit.Text" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="usebillingaddress.Text" xml:space="preserve">
    <value>Use Billing Address for Shiping.</value>
  </data>
  <data name="usersettings.Text" xml:space="preserve">
    <value>User Settings</value>
  </data>
  <data name="value.Text" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="viewcart.Text" xml:space="preserve">
    <value>View Cart</value>
  </data>
  <data name="websiteurl.Text" xml:space="preserve">
    <value>Website URL</value>
  </data>
</root>